syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/rprtr258/pm/api";

package api;

service Daemon {
    // process management
    rpc Start(IDs) returns (google.protobuf.Empty);
    rpc Stop(IDs) returns (google.protobuf.Empty);

    // CRUD operations
    rpc Create(ProcessOptions) returns (ProcessID);
    rpc List(google.protobuf.Empty) returns (ProcessesList);
    rpc Delete(IDs) returns (google.protobuf.Empty);

    rpc HealthCheck(google.protobuf.Empty) returns (google.protobuf.Empty);
}

message ProcessID {
    uint64 id = 1;
}

message ProcessOptions {
    string command = 1;
    repeated string args = 2;
    optional string name = 3;
    string cwd = 4;
    repeated string tags = 5;
}

message ProcessesList {
    repeated Process list = 1;
}

message Process {
    ProcessID id = 1;
    ProcessStatus status = 2;
    string name = 3;
    string cwd = 4;
    repeated string tags = 5;
    string command = 6;
    repeated string args = 7;
}

message ProcessStatus {
    oneof status {
        google.protobuf.Empty Invalid = 1;
        google.protobuf.Empty Starting = 2;
        RunningProcessStatus Running = 3;
        StoppedProcessStatus Stopped = 4;
    };
}

message RunningProcessStatus {
    int64 pid = 1;
    google.protobuf.Timestamp start_time = 2;
    uint64 cpu = 3;
    uint64 memory = 4;
}

message StoppedProcessStatus {
    int64 exit_code = 1;
    google.protobuf.Timestamp stopped_at = 2;
}

message IDs {
    repeated ProcessID ids = 1;
}
